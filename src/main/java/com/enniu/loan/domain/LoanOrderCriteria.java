package com.enniu.loan.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LoanOrderCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public LoanOrderCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCreditCardIsNull() {
            addCriterion("credit_card is null");
            return (Criteria) this;
        }

        public Criteria andCreditCardIsNotNull() {
            addCriterion("credit_card is not null");
            return (Criteria) this;
        }

        public Criteria andCreditCardEqualTo(Long value) {
            addCriterion("credit_card =", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardNotEqualTo(Long value) {
            addCriterion("credit_card <>", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardGreaterThan(Long value) {
            addCriterion("credit_card >", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardGreaterThanOrEqualTo(Long value) {
            addCriterion("credit_card >=", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardLessThan(Long value) {
            addCriterion("credit_card <", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardLessThanOrEqualTo(Long value) {
            addCriterion("credit_card <=", value, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardIn(List<Long> values) {
            addCriterion("credit_card in", values, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardNotIn(List<Long> values) {
            addCriterion("credit_card not in", values, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardBetween(Long value1, Long value2) {
            addCriterion("credit_card between", value1, value2, "creditCard");
            return (Criteria) this;
        }

        public Criteria andCreditCardNotBetween(Long value1, Long value2) {
            addCriterion("credit_card not between", value1, value2, "creditCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardIsNull() {
            addCriterion("deposit_card is null");
            return (Criteria) this;
        }

        public Criteria andDepositCardIsNotNull() {
            addCriterion("deposit_card is not null");
            return (Criteria) this;
        }

        public Criteria andDepositCardEqualTo(Long value) {
            addCriterion("deposit_card =", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardNotEqualTo(Long value) {
            addCriterion("deposit_card <>", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardGreaterThan(Long value) {
            addCriterion("deposit_card >", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardGreaterThanOrEqualTo(Long value) {
            addCriterion("deposit_card >=", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardLessThan(Long value) {
            addCriterion("deposit_card <", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardLessThanOrEqualTo(Long value) {
            addCriterion("deposit_card <=", value, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardIn(List<Long> values) {
            addCriterion("deposit_card in", values, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardNotIn(List<Long> values) {
            addCriterion("deposit_card not in", values, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardBetween(Long value1, Long value2) {
            addCriterion("deposit_card between", value1, value2, "depositCard");
            return (Criteria) this;
        }

        public Criteria andDepositCardNotBetween(Long value1, Long value2) {
            addCriterion("deposit_card not between", value1, value2, "depositCard");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Long value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Long value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Long value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Long value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Long value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Long> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Long> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Long value1, Long value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Long value1, Long value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andOverdueIsNull() {
            addCriterion("overdue is null");
            return (Criteria) this;
        }

        public Criteria andOverdueIsNotNull() {
            addCriterion("overdue is not null");
            return (Criteria) this;
        }

        public Criteria andOverdueEqualTo(Short value) {
            addCriterion("overdue =", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueNotEqualTo(Short value) {
            addCriterion("overdue <>", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueGreaterThan(Short value) {
            addCriterion("overdue >", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueGreaterThanOrEqualTo(Short value) {
            addCriterion("overdue >=", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueLessThan(Short value) {
            addCriterion("overdue <", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueLessThanOrEqualTo(Short value) {
            addCriterion("overdue <=", value, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueIn(List<Short> values) {
            addCriterion("overdue in", values, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueNotIn(List<Short> values) {
            addCriterion("overdue not in", values, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueBetween(Short value1, Short value2) {
            addCriterion("overdue between", value1, value2, "overdue");
            return (Criteria) this;
        }

        public Criteria andOverdueNotBetween(Short value1, Short value2) {
            addCriterion("overdue not between", value1, value2, "overdue");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andDueAtIsNull() {
            addCriterion("due_at is null");
            return (Criteria) this;
        }

        public Criteria andDueAtIsNotNull() {
            addCriterion("due_at is not null");
            return (Criteria) this;
        }

        public Criteria andDueAtEqualTo(Date value) {
            addCriterion("due_at =", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtNotEqualTo(Date value) {
            addCriterion("due_at <>", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtGreaterThan(Date value) {
            addCriterion("due_at >", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtGreaterThanOrEqualTo(Date value) {
            addCriterion("due_at >=", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtLessThan(Date value) {
            addCriterion("due_at <", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtLessThanOrEqualTo(Date value) {
            addCriterion("due_at <=", value, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtIn(List<Date> values) {
            addCriterion("due_at in", values, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtNotIn(List<Date> values) {
            addCriterion("due_at not in", values, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtBetween(Date value1, Date value2) {
            addCriterion("due_at between", value1, value2, "dueAt");
            return (Criteria) this;
        }

        public Criteria andDueAtNotBetween(Date value1, Date value2) {
            addCriterion("due_at not between", value1, value2, "dueAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loan_order
     *
     * @mbggenerated do_not_delete_during_merge Wed Oct 01 11:26:25 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loan_order
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}