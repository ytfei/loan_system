package com.enniu.loan.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RepaymentLogCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public RepaymentLogCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdIsNull() {
            addCriterion("repayment_schedule_id is null");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdIsNotNull() {
            addCriterion("repayment_schedule_id is not null");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdEqualTo(Integer value) {
            addCriterion("repayment_schedule_id =", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdNotEqualTo(Integer value) {
            addCriterion("repayment_schedule_id <>", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdGreaterThan(Integer value) {
            addCriterion("repayment_schedule_id >", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("repayment_schedule_id >=", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdLessThan(Integer value) {
            addCriterion("repayment_schedule_id <", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdLessThanOrEqualTo(Integer value) {
            addCriterion("repayment_schedule_id <=", value, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdIn(List<Integer> values) {
            addCriterion("repayment_schedule_id in", values, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdNotIn(List<Integer> values) {
            addCriterion("repayment_schedule_id not in", values, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdBetween(Integer value1, Integer value2) {
            addCriterion("repayment_schedule_id between", value1, value2, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andRepaymentScheduleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("repayment_schedule_id not between", value1, value2, "repaymentScheduleId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdIsNull() {
            addCriterion("withhold_log_id is null");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdIsNotNull() {
            addCriterion("withhold_log_id is not null");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdEqualTo(Integer value) {
            addCriterion("withhold_log_id =", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdNotEqualTo(Integer value) {
            addCriterion("withhold_log_id <>", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdGreaterThan(Integer value) {
            addCriterion("withhold_log_id >", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("withhold_log_id >=", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdLessThan(Integer value) {
            addCriterion("withhold_log_id <", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdLessThanOrEqualTo(Integer value) {
            addCriterion("withhold_log_id <=", value, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdIn(List<Integer> values) {
            addCriterion("withhold_log_id in", values, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdNotIn(List<Integer> values) {
            addCriterion("withhold_log_id not in", values, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdBetween(Integer value1, Integer value2) {
            addCriterion("withhold_log_id between", value1, value2, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andWithholdLogIdNotBetween(Integer value1, Integer value2) {
            addCriterion("withhold_log_id not between", value1, value2, "withholdLogId");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountIsNull() {
            addCriterion("repaid_amount is null");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountIsNotNull() {
            addCriterion("repaid_amount is not null");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountEqualTo(Long value) {
            addCriterion("repaid_amount =", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountNotEqualTo(Long value) {
            addCriterion("repaid_amount <>", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountGreaterThan(Long value) {
            addCriterion("repaid_amount >", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("repaid_amount >=", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountLessThan(Long value) {
            addCriterion("repaid_amount <", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountLessThanOrEqualTo(Long value) {
            addCriterion("repaid_amount <=", value, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountIn(List<Long> values) {
            addCriterion("repaid_amount in", values, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountNotIn(List<Long> values) {
            addCriterion("repaid_amount not in", values, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountBetween(Long value1, Long value2) {
            addCriterion("repaid_amount between", value1, value2, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andRepaidAmountNotBetween(Long value1, Long value2) {
            addCriterion("repaid_amount not between", value1, value2, "repaidAmount");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeIsNull() {
            addCriterion("withhold_type is null");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeIsNotNull() {
            addCriterion("withhold_type is not null");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeEqualTo(Byte value) {
            addCriterion("withhold_type =", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeNotEqualTo(Byte value) {
            addCriterion("withhold_type <>", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeGreaterThan(Byte value) {
            addCriterion("withhold_type >", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("withhold_type >=", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeLessThan(Byte value) {
            addCriterion("withhold_type <", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeLessThanOrEqualTo(Byte value) {
            addCriterion("withhold_type <=", value, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeIn(List<Byte> values) {
            addCriterion("withhold_type in", values, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeNotIn(List<Byte> values) {
            addCriterion("withhold_type not in", values, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeBetween(Byte value1, Byte value2) {
            addCriterion("withhold_type between", value1, value2, "withholdType");
            return (Criteria) this;
        }

        public Criteria andWithholdTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("withhold_type not between", value1, value2, "withholdType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeIsNull() {
            addCriterion("repaid_type is null");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeIsNotNull() {
            addCriterion("repaid_type is not null");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeEqualTo(Byte value) {
            addCriterion("repaid_type =", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeNotEqualTo(Byte value) {
            addCriterion("repaid_type <>", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeGreaterThan(Byte value) {
            addCriterion("repaid_type >", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("repaid_type >=", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeLessThan(Byte value) {
            addCriterion("repaid_type <", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeLessThanOrEqualTo(Byte value) {
            addCriterion("repaid_type <=", value, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeIn(List<Byte> values) {
            addCriterion("repaid_type in", values, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeNotIn(List<Byte> values) {
            addCriterion("repaid_type not in", values, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeBetween(Byte value1, Byte value2) {
            addCriterion("repaid_type between", value1, value2, "repaidType");
            return (Criteria) this;
        }

        public Criteria andRepaidTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("repaid_type not between", value1, value2, "repaidType");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNull() {
            addCriterion("create_at is null");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNotNull() {
            addCriterion("create_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreateAtEqualTo(Date value) {
            addCriterion("create_at =", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotEqualTo(Date value) {
            addCriterion("create_at <>", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThan(Date value) {
            addCriterion("create_at >", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("create_at >=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThan(Date value) {
            addCriterion("create_at <", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThanOrEqualTo(Date value) {
            addCriterion("create_at <=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtIn(List<Date> values) {
            addCriterion("create_at in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotIn(List<Date> values) {
            addCriterion("create_at not in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtBetween(Date value1, Date value2) {
            addCriterion("create_at between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotBetween(Date value1, Date value2) {
            addCriterion("create_at not between", value1, value2, "createAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repayment_log
     *
     * @mbggenerated do_not_delete_during_merge Wed Oct 01 11:26:25 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repayment_log
     *
     * @mbggenerated Wed Oct 01 11:26:25 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}